                                                STRING
1>int to string
	int n1=300;
	string str=to_string(n1);
2>string to int
	string str="60";
	int n1=stoi(str);

3>string to char Array
	string str="optimizer";
	int n=str.size();
	char char_array[n+1];
	strcpy(char_array, str.c_srt());


4>Char At
	string str="hello";
	str.at(2);   //give l
5>check if string is valid or note ?
	string str;
	validate(str);  //return true or false
6>to convert string to lower case
	string str="Hello World";
	transform(s.begin(),s.end(),s.begin(), ::tolower);


7>to delete the char at particular position from string
	string str="Hello World";
	str.erase(str.begin()+4);    delete char at index 4, i.e.-o;
	Output->Hell World
8>delete x no. of char from index y
	str.erase(1,4);
	output-> H World
9>to delete char from index x to end
	srt.erase(1);
	output-> H


10> To get substring of x charector from index i
	string str="Hello World";
	string s1=str.substr(i,x);
	for i=1 and x=3,
	output->ell
11> To get substring after a particular charector.
    string s = "dog:cat";
    // Find position of ':' using find()
    int pos = s.find(":");                     //if not find it return string::npos
    // Copy substring after pos
    string sub = s.substr(pos + 1);
    // prints the result
    cout << "String is: " << sub;  -------output=cat
12> To get total number of possible substring in a string of length n
	n(n+1)/2

13> get string input
	string str;
	getline(cin,str);        //take input until user not press enter;
	getline(cin,str,'a');    //take input until user not press a;

14> to reverse string
	reverse(str.begin(),str.end());

15>to check if particular string is present in a given string or not.
    string str = "geeksforgeeks";
    string str1 = "geeks";
    // Find first occurrence of "geeks"
    size_t found = str.find(str1);
    if (found != string::npos)
        cout << "First occurrence is " << found << endl;

16>str.find_last_of("13579"); //return the last index of string where 1 or 3 or 5 or 7 or 9 is present.

17> abstract words from sentence;
	stringstream ss(str); // Used for breaking words
    	string Word; // To store individual words
    	while (ss >> Word)
        	cout<<Word;