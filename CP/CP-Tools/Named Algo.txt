1>Kadaneâ€™s Algorithm
int maxSubArraySum(int a[], int size)   //work only when atleast 1 element is non-negative;
{
    int max_so_far = INT_MIN, max_ending_here = 0;
 
    for (int i = 0; i < size; i++)
    {
        max_ending_here = max_ending_here + a[i];
        if (max_so_far < max_ending_here)
            max_so_far = max_ending_here;
 
        if (max_ending_here < 0)
            max_ending_here = 0;
    }
    return max_so_far;
}

int maxSubArray(vector<int>& nums) {         //works for all;
        int sum=0;
        int n = nums.size();
        int best =INT_MIN;
		
        for(int i=0;i<n;i++){
            sum = max(nums[i],sum+nums[i]);
            best = max(best,sum);
        }
        return best;
    }

2> Euclidean Algo  (H.C.F.)
int greatest_comon_diviser(int a, int b){   //not an optimized approach;
	while(a!=b){
	  if(a>b)a-=b;
	  else b-=a;
	}
     return a;
}

int gcd(int a, int b){       //optimized solution;
  if(b==0)return a;	    
  else return gcd(b,a%b);   // performing modulo substraction to prevent from repeated substractin;
}

3>sieve Algo               //to find the prime numbers upto n;
void prime_numbers_upto_n(int n){
    vector<bool>isPrime(n+1,true);
    for(int i=2;i<=n;i++){
        if(isPrime[i]){
            for(int j=i*i;j<n;j+=i)isPrime[j]=false;
    }
    for(int i=2;i<n;i++)cout<<i<<", ";
}

4> Brian Kerningam's algo
	int count_set_bits(int n){           //O(total no. of bits on)
		int count =0;
		while(n>0){
			n=n&(n-1);
			count ++;
		}
		return count;
	}
     to is if number is power of 2 or not
	bool isPowerof2(int n){             //not optimized way
			int count =0;
		while(n>0){
			n=n&(n-1);
			count ++;
			
		}
		return count===1;           //as if number is power of 2, it has only 1 set bit;
	}
	bool isPowerof2(int n){             //optimized way;
		return n&(n-1)==0;          //unset all right side bits, if after unseting all right bits, number become 0 that means initilly it must have only one bit, that means it is power of 2;
